{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Title/Title.module.css","components/Notification/Notification.module.css","logo.svg","components/Title/Title.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Title","title","children","className","s","text","FeedbackOptions","options","onLeaveFeedback","option","map","Button","name","type","variant","size","btn","onClick","uuid","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","defaultProps","App","useState","setGood","setNeutral","setBad","objKey","Object","keys","onCountTotalFeedback","src","coffeeToGo","alt","e","preventDefault","target","prevGood","prevNeutral","prevBad","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4IACAA,EAAOC,QAAU,CAAC,KAAO,2B,kBCAzBD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,IAAM,+B,kBCAjED,EAAOC,QAAU,CAAC,KAAO,sB,iBCAzBD,EAAOC,QAAU,CAAC,KAAO,6B,iICDV,MAA0B,iC,+BCG5BC,EAAQ,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7B,OACE,qCACE,qBAAIC,UAAWC,IAAEC,KAAjB,cAAyBJ,EAAzB,OACCC,M,gCCDMI,G,MAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzC,OACE,qBAAKL,UAAWC,IAAEK,OAAlB,SACGF,EAAQG,KAAI,SAACD,GAAD,OACX,cAACE,EAAA,EAAD,CAEEC,KAAMH,EACNI,KAAK,SACLC,QAAQ,eACRC,KAAK,KACLZ,UAAWC,IAAEY,IACbC,QAAST,EAPX,SASGC,GARIS,YAAKT,W,iBCRPU,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OACE,mCACE,mBAAGjB,UAAWC,IAAEC,KAAhB,SAAuBe,O,gBCHhBC,EAAa,SAAC,GAMpB,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEA,OACE,+BACE,qBAAIvB,UAAWC,IAAEC,KAAjB,mBAA8BiB,EAA9B,OACA,qBAAInB,UAAWC,IAAEC,KAAjB,sBAAiCkB,EAAjC,OACA,qBAAIpB,UAAWC,IAAEC,KAAjB,kBAA6BmB,EAA7B,OACA,qBAAIrB,UAAWC,IAAEC,KAAjB,oBAA+BoB,EAA/B,OACA,qBAAItB,UAAWC,IAAEC,KAAjB,gCAA2CqB,EAA3C,aAKNL,EAAWM,aAAe,CACxBF,MAAO,EACPC,mBAAoB,GCsCPE,MArDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOL,EAAP,KAAYQ,EAAZ,KAEMC,EAASC,OAAOC,KAAK,CAAEb,OAAMC,UAASC,QAkBtCY,EAAuB,kBAAMd,EAAOC,EAAUC,GAKpD,OACE,sBAAKrB,UAAU,MAAf,UACE,qBAAKkC,IAAKC,EAAYnC,UAAU,WAAWoC,IAAI,eAE/C,cAAC,EAAD,CAAOtC,MAAM,wBAAb,SACE,cAAC,EAAD,CAAiBM,QAAS0B,EAAQzB,gBA1BhB,SAACgC,GAEvB,OADAA,EAAEC,iBACMD,EAAEE,OAAO9B,MACf,IAAK,OACHkB,GAAQ,SAACa,GAAD,OAAcA,EAAW,KACjC,MACF,IAAK,UACHZ,GAAW,SAACa,GAAD,OAAiBA,EAAc,KAC1C,MACF,IAAK,MACHZ,GAAO,SAACa,GAAD,OAAaA,EAAU,WAmBE,IAAjCT,IACC,cAAC,EAAD,CAAchB,QAAQ,sBAEtB,cAAC,EAAD,CAAOnB,MAAM,aAAb,SACE,cAAC,EAAD,CACEqB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOW,IACPV,mBAnBRoB,KAAKC,MAA0B,KAAlBzB,EAAOC,GAAkBa,aC7B1CY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.705bc1d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__Mkte2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"FeedbackOptions_option__3pyOL\",\"btn\":\"FeedbackOptions_btn__1rp9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Title_text__39Uar\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__3WvWm\"};","export default __webpack_public_path__ + \"static/media/logo.16d03ecd.svg\";","import PropTypes from \"prop-types\";\nimport s from \"./Title.module.css\";\n\nexport const Title = ({ title, children }) => {\n  return (\n    <>\n      <h2 className={s.text}> {title} </h2>\n      {children}\n    </>\n  );\n};\n\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n","import s from \"./FeedbackOptions.module.css\";\nimport { v4 as uuid } from \"uuid\";\nimport { Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PropTypes from \"prop-types\";\n\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={s.option}>\n      {options.map((option) => (\n        <Button\n          key={uuid(option)}\n          name={option}\n          type=\"button\"\n          variant=\"outline-dark\"\n          size=\"lg\"\n          className={s.btn}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </Button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\n","import s from \"./Notification.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport const Notification = ({ message }) => {\n  return (\n    <>\n      <p className={s.text}>{message}</p>\n    </>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import s from \"./Statistics.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport const Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) => {\n  return (\n    <ul>\n      <li className={s.text}>Good: {good} </li>\n      <li className={s.text}>Neutral: {neutral} </li>\n      <li className={s.text}>Bad: {bad} </li>\n      <li className={s.text}>Total: {total} </li>\n      <li className={s.text}>Positive feedback: {positivePercentage} % </li>\n    </ul>\n  );\n};\n\nStatistics.defaultProps = {\n  total: 0,\n  positivePercentage: 0,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import coffeeToGo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { Title } from \"./components/Title/Title\";\nimport { FeedbackOptions } from \"./components/FeedbackOptions/FeedbackOptions\";\nimport { Notification } from \"./components/Notification/Notification\";\nimport { Statistics } from \"./components/Statistics/Statistics\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const objKey = Object.keys({ good, neutral, bad });\n\n  const onLeaveFeedback = (e) => {\n    e.preventDefault();\n    switch (e.target.name) {\n      case \"good\":\n        setGood((prevGood) => prevGood + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevNeutral) => prevNeutral + 1);\n        break;\n      case \"bad\":\n        setBad((prevBad) => prevBad + 1);\n        break;\n      default:\n    }\n  };\n\n  const onCountTotalFeedback = () => good + neutral + bad;\n\n  const onCountPositivePercentage = () =>\n    Math.round(((good + neutral) * 100) / onCountTotalFeedback());\n\n  return (\n    <div className=\"App\">\n      <img src={coffeeToGo} className=\"App-logo\" alt=\"coffeeToGo\" />\n\n      <Title title=\"Please leave feedback\">\n        <FeedbackOptions options={objKey} onLeaveFeedback={onLeaveFeedback} />\n      </Title>\n\n      {onCountTotalFeedback(objKey) === 0 ? (\n        <Notification message=\"No feedback given\" />\n      ) : (\n        <Title title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={onCountTotalFeedback(objKey)}\n            positivePercentage={onCountPositivePercentage(objKey)}\n          />\n        </Title>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}